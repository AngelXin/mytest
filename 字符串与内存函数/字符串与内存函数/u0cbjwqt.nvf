#define _CRT_SECURE_NO_WARNINGS 1

//strlen的三种实现方式
//方法一：非递归
//#include <stdio.h>
//int my_strlen(const char* str)
//{
//	int count = 0;
//	while (*str != '\0')
//	{
//		count++;
//		str++;
//	}
//	return count;
//}
//int main()
//{
//	int len = my_strlen("abcdef");
//	printf("%d\n", len);
//	return 0;
//}

//方法二：递归
//#include <stdio.h>
//int my_strlen(const char* str)
//{
//	if (*str != '\0')
//	{
//		return 1 + my_strlen(str + 1);
//	}
//	else
//		return 0;
//}
//int main()
//{
//	int len = my_strlen("abcdef");
//	printf("%d\n", len);
//	return 0;
//}

////方法三：用指针-指针
//#include <stdio.h>
//int my_strlen(char* str)
//{
//	char* p = str;
//	while (*p != '\0')
//		p++;
//	return p - str;
//}
//int main()
//{
//	int len = my_strlen("abcdef");
//	printf("%d\n", len);
//	return 0;
//}


//#include <stdio.h>
//#include <assert.h>
//char* my_strcpy(char* dest, const char* str)
//{
//	char* ret = dest;
//	assert(dest != NULL);
//	assert(str != NULL);
//	while (*dest++ = *str++)
//	{
//		 ;
//	}
//	return ret;
//}
//int main()
//{
//	char arr1[20] = {'a','\0'};
//	printf("%s\n", my_strcpy(arr1,"abcdef"));
//	return 0;
//}//my_strcpy的实现


//#include <stdio.h>
//#include <assert.h>
//char* my_strcat(char* dest, const char* str)
//{
//	char* ret = dest;
//	assert(dest != NULL);
//	assert(str != NULL);
//	while (*dest != '\0')
//	{
//		dest++;
//	}
//	while (*dest++ = *str++)
//	{
//		 ;
//	}
//	return ret;
//}
//int main()
//{
//	char arr1[20] = {'a','\0'};
//	 printf("%s\n", my_strcat(arr1,"abcdef"));
//	return 0;
//}//my_strcat的实现


//#include <stdio.h>
//#include <assert.h>
//int my_strcmp(const char* str1, const char* str2)
//{
//	if (*str1 == '\0')
//		return 0;
//	assert(str1 != NULL);
//	assert(str2 != NULL);
//	while (*str1 == *str2)
//	{
//		str1++;
//		str2++;
//	}
//	return *str1 - *str2;
//}
//int main()
//{
//	char arr1[10] = "abcd";
//	char arr2[9] = "abcdef";
//	int p = my_strcmp(arr1, arr2);
//	printf("%d\n", p);
//	return 0;
//}//my_strcmp的自己实现


//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	char arr[10] = "abcdef";
//	printf("%s\n", strncpy(arr, "hello bit", 3));
//	return 0;
//}//strncpy的引用(注意特殊情况：要拷贝的字符串位数不足的情况)


//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	char arr[10] = "abcdef";
//	printf("%s\n", strncat(arr, "world", 2));
//	return 0;
//}//strncat的引用

//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	printf("%d\n", strncmp("abc", "aefg", 1));
//	return 0;
//}//strncmp的引用


//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	char arr[] = "abcdefabcdef";
//	char *ret = strchr(arr, 'd');
//	if (ret != NULL)
//		printf("%s\n", ret);
//	else
//		printf("找不到\n");
//}//strchr的引用


#include <stdio.h>
#include <assert.h>
char* my_strchr(char* str, int c)
{
	assert(str != NULL);
	while (*str != c)
	{
		str++;
	}
	return str;
}
int main()
{
	char arr[] = "abcdefrt";
	char* ret = my_strchr(arr, 'r');
	printf("%s\n", ret);
	return 0;
}//my_strchr的自己实现